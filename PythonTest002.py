#!/usr/bin/python
# -*- coding: UTF-8 -*-

# Python Test 002
# 企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，
# 奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按
# 10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，
# 高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，
# 可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，
# 高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，
# 求应发放奖金总数？
# 请利用数轴来分界，定位。注意定义时需把奖金定义成长整型

# 方法一

n = int(input("输入当月利润："));
s = 0

if n <= 100000:
    s = n * 1.1
if (n > 100000) and (n <= 200000):
    s = 100000 * 1.1 + \
        (n - 100000) * 1.075
if (n > 200000) and (n <= 400000):
    s = 100000 * 1.1 + \
        100000 * 1.075 + \
        (n - 200000) * 1.05
if (n > 400000) and (n <= 600000):
    s = 100000 * 1.1 + \
        100000 * 1.075 + \
        200000 * 1.05 + \
        (n - 400000) * 1.03
if (n > 600000) and (n <= 1000000):
    s = 100000 * 1.1 + \
        100000 * 1.075 + \
        200000 * 1.05 + \
        200000 * 1.03 + \
        (n - 600000) * 1.015
if n > 1000000:
    s = 100000 * 1.1 + \
        100000 * 1.075 + \
        200000 * 1.05 + \
        200000 * 1.03 + \
        400000 * 1.015 + \
        (n - 1000000) * 1.01
print(s - n)

# 方法二

i = n
arr = [1000000, 600000, 400000, 200000, 100000, 0]
rat = [0.01, 0.015, 0.03, 0.05, 0.075, 0.1]
r = 0
for idx in range(0, 6):
    if i > arr[idx]:
        r += (i - arr[idx]) * rat[idx]
        # print ((i - arr[idx]) * rat[idx])
        i = arr[idx]
print(r)

# 方法三

Bonus = 0
BonusRateList = [[100, 0.010],
                 [60, 0.015],
                 [40, 0.030],
                 [20, 0.050],
                 [10, 0.075],
                 [0, 0.100]]
Profit = n
Profit /= 10000

for i in range(0, len(BonusRateList)):
    if Profit > BonusRateList[i][0]:
        Bonus += (Profit - BonusRateList[i][0]) * BonusRateList[i][1]
        Profit = BonusRateList[i][0]
print(Bonus * 10000)

# 方法四
# 创建生成器
a = [100, 60, 40, 20, 10, 0]
b = [0.01, 0.015, 0.03, 0.05, 0.075, 0.1]
n /= 10000

def f(x):
    for i in range(len(a)):
        if n > a[i]:
            c = (a[j] - a[j + 1] for j in range(i, len(a) - 1))
            break
    r = sum(map(lambda x, y: x * y, b[i:], [(n - a[i])] + list(c)))
    yield r * 10000

print(next(f(n)))


